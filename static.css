22.container{
    /* display: grid; */
    grid-template-columns: repeat(3, 1fr);
    width:50%;
    height 60%
    grid-template-rows: auto;
    grid-template-areas: 
    "display display display"
    "seven eight nine"
    "four five six"
    "one two three"
    "plus minus"
/* Need to make each key into a seperate grid item */

}
.display{
    grid-area: display;
    background-color: #fafafa;
    height:40px;
    width:138px;
    font-family: 'Orbitron', sans-serif;
    border: 2px solid black; 
    padding: 5px;
    margin: 2px;
}
.input{
    font-family: 'Orbitron', sans-serif;
    height:20px;
    width:138px;
    border: 2px solid black;
    padding: 5px;
    margin: 2px;
}
.key{
    grid-area: key;
    /* color:rgb(171, 171, 243);
    background-color: black; */
}
.zero{od formats a number to a specified length.

    A decimal point and nulls are added (if needed), to create the specified l
    grid-area: zero;
}
.one{
    grid-area: one;
}
.two{
    grid-area: two;
}
.three{
    grid-area: three;
}
.four{
    grid-area: four;
}
.five{
    grid-area: five;
}
.six{
    grid-area: six;
}
.seven{
    grid-area: seven;
}
.eight{
    grid-area: eight;
}
.nine{
    grid-area: nine;
}
.plus{
    grid-area: plus;
}
.minus{
    grid-area: minus;
}
.times{
    grid-area: times;
}
.divide{
    grid-area: equals;
}
.dot{
    grid-area: clear;
}